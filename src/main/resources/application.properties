spring.application.name=tiger
api.github-url=https://api.github.com
api.leetcode-url=http://localhost:3000
api.github-token=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
api.groq-url=https://api.groq.com
api.groq-token=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
api.linkedin-url=https://api.linkedin.com
api.linkedin-client-id=86djhvi0c6ibw2
api.linkedin-client-secret=Tqfc5QFYE4i6sukA
api.linkedin-callback=https://tiger-backend-production.up.railway.app/api/tiger/user/linkedin/callback
api.redirect-url=https://tiger-ui-1.onrender.com/signup?code=
api.groq-retry-count=3 
api.firebase-access-token=AIzaSyAv3r8-FXwd36S_ecoPLT4SgHXnJcJlBXM
api.firebase-refresh-token=1//04Pz--KguKunOCgYIARAAGAQSNwF-L9IrS-nq2aOilt4mwB3jqydHJQV1n1UIFsNzOD9RL85mLvlduvUnArUiQ3-m9MiB2qoDw1I
api.firebase-access-url=https://fcm.googleapis.com
api.firebase-projectid=tiger-new-01
api.google-clientid=1056647106417-3ge1etofnabuq2ita2a6qet1v82ah9b1.apps.googleusercontent.com
api.google-client-secret=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


groq.daily-roast-prompt=Roast this users yesterday performance in the funniest, most savage way possible using as many famous personalities as you can \u2014 like  Narendra Modi, Elon Musk, SRK, ChaiGPT, Ratan Tata, Mark Zuckerberg, and more. Be clever, creative, and ruthless.these submission present inside of recentSubmissions section. roast if he has no submissions yesterday. \
Use yesterdays data like submissions, accuracy, recent activity, lazy streaks, overactivity, tough level of questions \u2014 everything is fair game. \
Format your response as multiple JSON blocks: \
\`\`\`json \
{ \
  "name": "Person", \
  "message": ["Funny roast line 1", "Funny line 2"] \
} \
\`\`\` \
Return only JSON blocks wrapped in triple backticks.

groq.profile-roast-prompt=Roast this LeetCode profile in the funniest, most savage way possible using TLEs, Submission rate,count , highlight consistency as many famous personalities like trump, modi , elon musk , and so on... \
Format your response as multiple JSON blocks: \
\`\`\`json \
{ \
  "name": "Person", \
  "message": ["Funny roast line 1", "Funny line 2"] \
} \
\`\`\` \
Return only JSON blocks wrapped in triple backticks.

groq.model=gemma2-9b-it
groq.retry-latency=2000
groq.notify-morning="Give a short motivational message encouraging users to stay focused and complete their targets today."
groq.notify-work="Give a one-line roast on my progress and motivate me to do my best work today."
#
## HikariCP recommended for production with AWS RDS
#spring.datasource.hikari.maximum-pool-size=10           
#spring.datasource.hikari.minimum-idle=2                
#
## Lifetime settings to recycle connections BEFORE RDS closes them
#spring.datasource.hikari.max-lifetime=270000          
#spring.datasource.hikari.idle-timeout=60000           
#spring.datasource.hikari.connection-timeout=30000       
#spring.datasource.hikari.keepalive-time=60000          

spring.profiles.active=dev

# JDBC URL
spring.datasource.url=jdbc:mysql://root:lcisqKpvyXsPJFtuGMeRPAXSavGWjlrc@maglev.proxy.rlwy.net:10894/railway
spring.datasource.username=root	

spring.datasource.password=lcisqKpvyXsPJFtuGMeRPAXSavGWjlrc
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true



linkedin.client-id=86djhvi0c6ibw2
linkedin.client-secret=Tqfc5QFYE4i6sukA
linkedin.redirect-uri=http://localhost:8080/linkedin/callback


